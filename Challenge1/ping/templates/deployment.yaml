apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ping.fullname" . }}
  labels:
    {{- include "ping.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ping.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ping.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ping.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: {{ .Values.appKey }}
                    operator: In
                    values:
                      - {{ .Values.appLabel }}
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchExpressions:
                  - key: {{ .Values.appKey }}
                    operator: In
                    values:
                      - {{ .Values.appLabel }}
              topologyKey: "topology.kubernetes.io/zone"
      initContainers:
        - name: random-service
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - |
              until nc -zv {{ .Values.waitForService.serviceName }} {{ .Values.waitForService.servicePort }}; do
                echo "Esperando al servicio {{ .Values.waitForService.serviceName }} ..."
                sleep 5
              done
              echo "Levantado el servicio {{ .Values.waitForService.serviceName }}"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
